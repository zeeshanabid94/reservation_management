{"version":3,"sources":["logo.svg","components/input_elements/input_elements.jsx","components/modal/modal.jsx","components/calendar/calendar.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FormTextInput","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentState","defaultValue","inherits","createClass","key","value","react_default","a","createElement","class","labelValue","type","name","onChange","React","Component","FormButton","_React$Component2","id","onClick","onSubmit","Modal","console","log","show","onClose","heading","children","MONTHS","DAYS","Calendar","current_time","moment","time","subtract","grid","i","length","row","j","width","toString","push","add","onClickDay","bind","assertThisInitialized","onReserve","onFullNameFieldChange","onEmailFieldChange","onCloseModal","current","grid_length","grid_width","start_day","end_day","csrf","cookies","get","modalShow","fullname","email","_this2","newState","fetch","then","res","statusText","status","json","json_results","reservations","unix","start_date","end_date","setState","catch","err","event","target","toLowerCase","data","headers","Content-Type","Accept","X-CSRFToken","method","body","JSON","stringify","response","aMoment","isBefore","reservation","isSameOrBefore","isSameOrAfter","_this3","selected","table_row_generator","row_num","dates","_loop","locked","taken","k","isSame","calender_day_generator","date","month","day","rows","modalChildren","input_elements_FormTextInput","input_elements_FormButton","modal","modal_Modal","withCookies","App","csrftoken","es6","className","calendar_calendar","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.27372f7b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './form_text_input.css';\r\nimport './button.css'\r\nexport class FormTextInput extends React.Component {\r\n    static propTypes = {\r\n        key: PropTypes.string.isRequired,\r\n        defaultValue: PropTypes.string.isRequired,\r\n        onChange: PropTypes.func.isRequired,\r\n        labelValue: PropTypes.string.isRequired\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentState: props.defaultValue\r\n        }\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div class=\"text_input\">\r\n                <label class=\"text_input_label\">\r\n                    {this.props.labelValue}\r\n                </label>\r\n                <input type=\"text\" class=\"text_input_textbox\" name={this.props.key} onChange={this.props.onChange}/>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport class FormButton extends React.Component {\r\n    static propTypes = {\r\n        key: PropTypes.string.isRequired,\r\n        onSubmit: PropTypes.func.isRequired,\r\n        labelValue: PropTypes.string.isRequired\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button class=\"button\" id={this.props.key} onClick={this.props.onSubmit}>\r\n               {this.props.labelValue} \r\n            </button>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport '../../App.css'\r\nimport './modal.css'\r\n\r\nexport class Modal extends React.Component {\r\n    static propTypes = {\r\n        show: Proptypes.bool.isRequired,\r\n        children: Proptypes.array.isRequired,\r\n        heading: Proptypes.array.isRequired,\r\n        onClose: Proptypes.func.isRequired\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        console.log(\"Modal State\", this.state);\r\n        console.log(\"Modal Props\", this.props);\r\n        return (\r\n            <div class={this.props.show === true ? 'modal_box modal_open':'modal_box modal_closed'}>\r\n                <div class=\"modal\">\r\n                    <div class=\"close_icon\" onClick={this.props.onClose}>\r\n                        X\r\n                    </div>\r\n                    <h2 class=\"modal_heading\">\r\n                        {this.props.heading}\r\n                    </h2>\r\n                    <form>\r\n                        <div class=\"modal_content\">\r\n                            {this.props.children}\r\n                        </div>\r\n                    </form>\r\n                    \r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport moment from 'moment';\r\nimport '../../App.css';\r\nimport './calendar.css';\r\nimport {reservationGet} from './mocked_data/reservations';\r\nimport {FormTextInput, FormButton} from './../../components/input_elements/input_elements'\r\nimport {Modal} from './../../components/modal/modal'\r\nimport {instanceOf} from 'prop-types';\r\nimport {withCookies, Cookies} from 'react-cookie';\r\nlet resourceUrlGet = \"/reservations/.json\";\r\nlet resourceUrlPost = \"/reservations/\";\r\nlet MONTHS = [\"Jan\", \"Feb\", \"Apr\", \"Mar\",\r\n            \"May\", \"Jun\", \"July\", \"Aug\", \"Sep\",\r\n            \"Oct\", \"Nov\", \"Dec\"];\r\nlet DAYS = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\nexport class Calendar extends React.Component {\r\n    static propTypes = {\r\n        cookies: instanceOf(Cookies).isRequired\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        let current_time = moment();\r\n        let time = moment(current_time).subtract(3, 'days');\r\n        let grid = []\r\n        for (let i = 0; i < props.length; i++) {\r\n            let row = [];\r\n            for (let j = 0; j < props.width; j++) {\r\n                console.log(time.toString())\r\n                row.push(moment(time));\r\n               time = time.add(1, 'day');\r\n            }\r\n            grid.push(row);\r\n        }\r\n        this.onClickDay = this.onClickDay.bind(this);\r\n        this.onReserve = this.onReserve.bind(this);\r\n        this.onFullNameFieldChange = this.onFullNameFieldChange.bind(this);\r\n        this.onEmailFieldChange = this.onEmailFieldChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onCloseModal = this.onCloseModal.bind(this);\r\n        this.state = {\r\n            current:current_time,\r\n            grid_length: props.length,\r\n            grid_width: props.width,\r\n            grid: grid,\r\n            start_day: null,\r\n            end_day: null,\r\n            csrf:props.cookies.get(\"csrftoken\"),\r\n            modalShow: false,\r\n            fullname: null,\r\n            email: null\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        let newState = this.state;\r\n        fetch(resourceUrlGet)\r\n        .then((res) => {\r\n            console.log(res.statusText);\r\n            console.log(res.status);\r\n            return res.json();\r\n        })\r\n        .then((json_results) => {\r\n            let reservations = [];\r\n            let res = json_results;\r\n            for (let i = 0; i < res.length; i++) {\r\n                reservations.push([moment.unix(res[i].start_date), moment.unix(res[i].end_date)]);\r\n            }\r\n            \r\n            console.log(\"RESERVATIONS\", reservations)\r\n            newState.reservations = reservations;\r\n            this.setState(newState);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err.toString());\r\n            console.log(\"AN error occurred while fetching data.\");\r\n        })\r\n\r\n    }\r\n\r\n    onCloseModal() {\r\n        console.log(\"Close Modal\");\r\n        let newState = this.state;\r\n        newState.modalShow = false;\r\n        this.setState(newState);\r\n    }\r\n\r\n    onFullNameFieldChange(event) {\r\n        let newState = this.state;\r\n        newState.fullname = event.target.value.toLowerCase();\r\n        this.setState(newState);\r\n    }\r\n\r\n    onEmailFieldChange(event) {\r\n        let newState = this.state;\r\n        console.log(event.target.value)\r\n        newState.email = event.target.value.toLowerCase();\r\n        this.setState(newState);\r\n    }\r\n\r\n    onSubmit() {\r\n        console.log(\"Submitted\");\r\n        let data = {\r\n            fullname: this.state.fullname,\r\n            email: this.state.email,\r\n            start_date: this.state.start_day.unix(),\r\n            end_date: this.state.end_day.unix()\r\n        }\r\n        console.log(\"Payload\", data);\r\n        let headers = {\r\n            \"Content-Type\":\"application/json\",\r\n            \"Accept\":\"application/json\",\r\n            'X-CSRFToken': this.state.csrf\r\n        }\r\n        fetch(resourceUrlPost, {\r\n            method: \"POST\",\r\n            body: JSON.stringify(data),\r\n            headers: headers\r\n        })\r\n        .then((response) => {\r\n            console.log(response.status);\r\n            console.log(response.statusText);\r\n            console.log(response.json())\r\n            return response;\r\n        })\r\n        .catch((err) => {\r\n            console.log(err.toString());\r\n            console.log(\"Unable to reserve\");\r\n        })\r\n    }\r\n    onReserve() {\r\n        console.log(\"Reserving\", this.state.start_day.toString(), this.state.end_day.toString());\r\n\r\n        if (this.state.start_day === null) {\r\n            console.log(\"Start date is null.\");\r\n        } else if (this.state.end_day === null) {\r\n            console.log(\"End date is null\");\r\n        } else {\r\n            // reserve here\r\n            let newState = this.state;\r\n            newState.modalShow = true;\r\n            this.setState(newState);\r\n            \r\n        }\r\n    }\r\n    onClickDay(aMoment) {\r\n        console.log(\"PRESSED\", aMoment.toString());\r\n        let newState = this.state;\r\n        if (newState.start_day != null && newState.end_day != null) {\r\n            newState.start_day = aMoment;\r\n            newState.end_day = null;\r\n        } else if (newState.start_day == null) {\r\n            newState.start_day = aMoment;\r\n        } else {\r\n            if (newState.start_day.isBefore(aMoment, 'day')) {\r\n                newState.end_day = aMoment;\r\n\r\n                // Check if it overlaps with already done reservations\r\n                for (let i = 0; i < this.state.reservations.length; i++) {\r\n                    let reservation = this.state.reservations[i];\r\n\r\n                    if (newState.start_day.isSameOrBefore(reservation[0], 'day') && \r\n                    newState.end_day.isSameOrAfter(reservation[1], 'day')) {\r\n                        newState.start_day = aMoment;\r\n                        newState.end_day = null;\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                newState.start_day = aMoment;\r\n            }\r\n        }\r\n        this.setState(newState);\r\n        console.log(newState);\r\n    }\r\n    render() {\r\n        console.log(\"Render State\", this.state);\r\n        let selected = false;\r\n        let table_row_generator = (row, row_num) => {\r\n            let dates = [];\r\n            for (let j = 0; j < row.length; j++) {\r\n                let locked = false;\r\n                if (row[j].isBefore(moment(), 'day')) {\r\n                    locked = true;\r\n                }\r\n                let taken = false;\r\n                if (this.state.reservations) {\r\n                    for (let k = 0; k < this.state.reservations.length; k++) {\r\n                        if (row[j].isSameOrAfter(this.state.reservations[k][0], 'day') && row[j].isSameOrBefore(this.state.reservations[k][1], 'day')) {\r\n                            console.log(\"TAKEN\", row[j].toString());\r\n                            taken = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                \r\n\r\n                if (this.state.start_day && this.state.start_day.isSame(row[j], 'day')) {\r\n                    selected = true;\r\n                }\r\n                \r\n                dates.push(calender_day_generator(row[j].date(), row[j].month(), row[j].day(), locked, taken, selected, () => this.onClickDay(row[j])));\r\n                \r\n                if (this.state.end_day == null) {\r\n                    selected = false;\r\n                } else if (this.state.end_day && this.state.end_day.isSame(row[j], 'day')) {\r\n                    selected = false;\r\n                }\r\n            }\r\n\r\n            return (\r\n                <tr>\r\n                    {dates}\r\n                </tr>\r\n            )\r\n        }\r\n\r\n        let rows = []\r\n\r\n        for (let i = 0; i < this.state.grid.length; i++) {\r\n            rows.push(table_row_generator(this.state.grid[i], i));\r\n        }\r\n        let modalChildren = [\r\n            <FormTextInput key='name' defaultValue='Enter your name here.' labelValue='Full Name' onChange={this.onFullNameFieldChange}></FormTextInput>,\r\n            <FormTextInput key='email' defaultValue='Enter your name here.' labelValue='Email' onChange={this.onEmailFieldChange}></FormTextInput>,\r\n            <FormButton key='confirm' labelValue=\"Confirm\" onSubmit={this.onSubmit}></FormButton>\r\n            ]\r\n        let modal = <Modal onClose={this.onCloseModal} show={this.state.modalShow} children={modalChildren} heading=\"Reservation Confirmation\"></Modal>\r\n        console.log(modal);\r\n        return (\r\n            <div id=\"calendar_app\">\r\n                {modal}\r\n                <h1>\r\n                    Calendar\r\n                </h1>\r\n                <div class = \"calendar\">\r\n                    <h2 class = \"year\">\r\n                            2018\r\n                    </h2>\r\n                    <div class = \"dates\">\r\n                        <table class = \"dates_table\">\r\n                            {rows}\r\n                        </table>\r\n                    </div>\r\n                    <button class=\"reserve_button\" onClick={this.onReserve}>\r\n                        Reserve\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet calender_day_generator = ((date, month, day, locked, taken, selected, onClick) => {\r\n    if (locked === true) {\r\n        return (\r\n            <td class = \"date_entry border_bottom border_right locked\">\r\n                <div class = \"date\">\r\n                    {date} {MONTHS[month]}\r\n                </div>\r\n                <div class = \"day\">\r\n                    {DAYS[day]}\r\n                </div>\r\n            </td>\r\n        )\r\n    } else if (taken === true) {\r\n        return (\r\n            <td class = \"date_entry border_bottom border_right reserved\">\r\n                <div class = \"date\">\r\n                    {date} {MONTHS[month]}\r\n                </div>\r\n                <div class = \"day\">\r\n                    {DAYS[day]}\r\n                </div>\r\n            </td>\r\n        )\r\n    } else if (selected === true) {\r\n        return (\r\n            <td class = \"date_entry border_bottom border_right selected\">\r\n                <div class = \"date\">\r\n                    {date} {MONTHS[month]}\r\n                </div>\r\n                <div class = \"day\">\r\n                    {DAYS[day]}\r\n                </div>\r\n            </td>\r\n        )\r\n    } else {\r\n        return (\r\n            <td class = \"date_entry border_bottom border_right\" onClick={onClick}>\r\n                <div class = \"date\">\r\n                    {date} {MONTHS[month]}\r\n                </div>\r\n                <div class = \"day\">\r\n                    {DAYS[day]}\r\n                </div>\r\n            </td>\r\n        )\r\n        \r\n    }\r\n}\r\n    \r\n    \r\n);\r\n\r\nexport default withCookies(Calendar);","import React, { Component } from 'react';\nimport { instanceOf } from 'prop-types';\nimport logo from './logo.svg';\nimport './App.css';\nimport Calendar from './components/calendar/calendar'\nimport {CookiesProvider, withCookies, Cookies} from 'react-cookie';\nclass App extends Component {\n  static propTypes = {\n    cookies: instanceOf(Cookies).isRequired\n  };\n\n  constructor(props) {\n    super(props);\n    const { cookies } = props;\n    this.state = {\n      csrftoken: cookies.get('csrftoken')\n    };\n    console.log(cookies);\n  }\n\n  render() {\n    return (\n      <CookiesProvider>\n        <div className=\"App\">\n          <Calendar length = {6} width = {7}></Calendar>\n        </div>\n      </CookiesProvider>\n          );\n  }\n}\n\nexport default withCookies(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { CookiesProvider } from 'react-cookie';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <CookiesProvider>\n        <App />\n    </CookiesProvider>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}